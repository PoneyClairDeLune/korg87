var s=Object.defineProperty;var a=(e,t,n)=>t in e?s(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var o=(e,t,n)=>(a(e,typeof t!="symbol"?t+"":t,n),n);var r=function(e,t,n=!1){if(!t&&!n)throw new TypeError("Type is not defined");if(e?.constructor){if(e.constructor!=t)throw new TypeError(`Value is not type ${t.name}`)}else if(!n)throw new TypeError("Value is not nullable")};var h,u=(h=class{static encodeLength(e){return r(e,Number),Math.ceil(e*this.chunkSizeDec/this.chunkSizeEnc)}static decodeLength(e){return r(e,Number),Math.floor(e*this.chunkSizeEnc/this.chunkSizeDec)}static encodeBlock(e,t){if(r(e,Uint8Array),r(t,Uint8Array),e.length>this.chunkSizeEnc)throw new Error(`Source is greater than ${this.chunkSizeEnc} bytes`);if(t.length<this.encodeLength(e.length))throw new Error("Target isn't sufficient for decoding");let n=0;e.forEach((c,i)=>{t[i+1]=c&127,n|=c>>7<<i}),t[0]=n}static decodeBlock(e,t){if(r(e,Uint8Array),r(t,Uint8Array),e.length>this.chunkSizeDec)throw new Error(`Source is greater than ${this.chunkSizeEnc} bytes`);if(t.length<this.decodeLength(e.length))throw new Error("Target isn't sufficient for decoding");let n=e[0];e.subarray(1).forEach((c,i)=>{t[i]=c|(n>>i&1)<<7})}},o(h,"chunkSizeEnc",7),o(h,"chunkSizeDec",8),h);export{u as Korg87};
